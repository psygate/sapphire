/**
 * This class is generated by jOOQ
 */
package com.psygate.minecraft.spigot.sovereignty.sapphire.db.model.tables;


import com.psygate.minecraft.spigot.sovereignty.nucleus.sql.util.MaterialConverter;
import com.psygate.minecraft.spigot.sovereignty.nucleus.sql.util.UUIDByteConverter;
import com.psygate.minecraft.spigot.sovereignty.sapphire.db.model.Keys;
import com.psygate.minecraft.spigot.sovereignty.sapphire.db.model.Nucleus;
import com.psygate.minecraft.spigot.sovereignty.sapphire.db.model.tables.records.SapphireTowerBlockRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.bukkit.Material;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SapphireTowerBlock extends TableImpl<SapphireTowerBlockRecord> {

	private static final long serialVersionUID = 1840000110;

	/**
	 * The reference instance of <code>nucleus.sapphire_tower_block</code>
	 */
	public static final SapphireTowerBlock SAPPHIRE_TOWER_BLOCK = new SapphireTowerBlock();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SapphireTowerBlockRecord> getRecordType() {
		return SapphireTowerBlockRecord.class;
	}

	/**
	 * The column <code>nucleus.sapphire_tower_block.tower_id</code>.
	 */
	public final TableField<SapphireTowerBlockRecord, Long> TOWER_ID = createField("tower_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>nucleus.sapphire_tower_block.x</code>.
	 */
	public final TableField<SapphireTowerBlockRecord, Integer> X = createField("x", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nucleus.sapphire_tower_block.y</code>.
	 */
	public final TableField<SapphireTowerBlockRecord, Integer> Y = createField("y", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nucleus.sapphire_tower_block.z</code>.
	 */
	public final TableField<SapphireTowerBlockRecord, Integer> Z = createField("z", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>nucleus.sapphire_tower_block.world_uuid</code>.
	 */
	public final TableField<SapphireTowerBlockRecord, UUID> WORLD_UUID = createField("world_uuid", org.jooq.impl.SQLDataType.BINARY.length(16).nullable(false), this, "", new UUIDByteConverter());

	/**
	 * The column <code>nucleus.sapphire_tower_block.material</code>.
	 */
	public final TableField<SapphireTowerBlockRecord, Material> MATERIAL = createField("material", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "", new MaterialConverter());

	/**
	 * Create a <code>nucleus.sapphire_tower_block</code> table reference
	 */
	public SapphireTowerBlock() {
		this("sapphire_tower_block", null);
	}

	/**
	 * Create an aliased <code>nucleus.sapphire_tower_block</code> table reference
	 */
	public SapphireTowerBlock(String alias) {
		this(alias, SAPPHIRE_TOWER_BLOCK);
	}

	private SapphireTowerBlock(String alias, Table<SapphireTowerBlockRecord> aliased) {
		this(alias, aliased, null);
	}

	private SapphireTowerBlock(String alias, Table<SapphireTowerBlockRecord> aliased, Field<?>[] parameters) {
		super(alias, Nucleus.NUCLEUS, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SapphireTowerBlockRecord> getPrimaryKey() {
		return Keys.KEY_SAPPHIRE_TOWER_BLOCK_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SapphireTowerBlockRecord>> getKeys() {
		return Arrays.<UniqueKey<SapphireTowerBlockRecord>>asList(Keys.KEY_SAPPHIRE_TOWER_BLOCK_TOWER_ID, Keys.KEY_SAPPHIRE_TOWER_BLOCK_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<SapphireTowerBlockRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<SapphireTowerBlockRecord, ?>>asList(Keys.SAPPHIRE_TOWER_BLOCK_IBFK_1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SapphireTowerBlock as(String alias) {
		return new SapphireTowerBlock(alias, this);
	}

	/**
	 * Rename this table
	 */
	public SapphireTowerBlock rename(String name) {
		return new SapphireTowerBlock(name, null);
	}
}
